// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id String @id @default(uuid())
}

model User {
  id             String     @id @default(uuid())
  email          String     @unique
  name           String?
  hashedPassword String?
  picture        String?
  sessions       Session[]
  listings       Listing[]
  roles          UserRole[]
  agency         Agency?    @relation(fields: [agencyId], references: [id])
  agencyId       String?    @unique
}

model Role {
  id    String     @id @default(uuid())
  name  String     @unique
  users UserRole[]
}

model UserRole {
  userId String
  roleId String

  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Listing {
  // Generated automatically
  id                String    @id @default(uuid())
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  userId            String
  owner             User      @relation(fields: [userId], references: [id])
  isAvailable       Boolean   @default(true)
  availabilityDate  DateTime?
  // Required for creation in form
  transactionType   String // rent, sale
  category          String // Won't be changed later
  type              String // Can be changed later, different types of the same category
  // Location Step
  manucipality      String?
  place             String? // village or town
  district          String? // naseleno mesto
  address           String? // the name of street and number
  longitude         Float?
  latitude          Float?
  locationPrecision String? // 'exact', 'approximate', 'wide | How precise the location is shown on the map
  // Main Characteristics
  price             Int?
  area              Int?
  orientation       String? // 'north', 'south', 'east', 'west', 'north-east', 'north-west', 'south-east', 'south-west'
  floorNumber       Int? // 0 for ground floor, and coded values for others
  // additional to floor
  // isPenthouse       Boolean?  @default(false)
  // isAtCorner        Boolean?  @default(false)
  // levels            Int?
  // rooms
  bedrooms          Int?      @default(0)
  bathrooms         Int?      @default(0)
  wcs               Int?      @default(0)
  kitchens          Int?      @default(0)
  livingRooms       Int?      @default(0)
  // Other features that are on spitogatos
  parking           Boolean?  @default(false)
  elevator          Boolean?  @default(false)
  balcony           Boolean?  @default(false)
  yard              Boolean?  @default(false)
  basement          Boolean?  @default(false)

  // equiped           Boolean?  @default(false)
  // alarm             Boolean?  @default(false)
  // loadingRamp       Boolean?  @default(false)
  // garage            Boolean?  @default(false)
  // secureDoor        Boolean?  @default(false)
  // view              Boolean?  @default(false)
  // zoning            String?
  // roadType          String? // access From?

  publishedAt      DateTime?
  published        Boolean   @default(false)
  title            String?
  shortDescription String?
  mainImage        String? // img will be hosted elsewhere, used to showcase the listing, usually first image in array

  tags String[]

  description      String
  isLiked          Boolean
  internalFeatures String[]
  externalFeatures String[]
  isPaidPromo      Boolean
  images           String[]
  // Not every listing is owned by an Agency
  agency           Agency?  @relation(fields: [agencyId], references: [id])
  agencyId         String?
}

model Agency {
  id               String    @id @default(uuid())
  name             String
  slug             String
  logoUrl          String
  address          String
  gpsLocation      String // lng,lat
  contactPerson    String
  workHours        String
  description      String
  shortDescription String
  listings         Listing[]
  branding         Json // or maybe use it as stringified json
  users            User[]
}
